<%- include('../partials/header.ejs')%>
<main>
    <div class="course-header">
        <h2>Welcome to <%= course.courseName %></h2>
        <a href="/courses/<%= course.id %>/schedule" class="button" id="add-schedule-button">View Schedule</a>
    </div> 
    <div class="queue-container"> 
        <p class="noQuestions">Here is where you will find information about the queue</p>
        <% if (questions.length) { %>
            <div class="question-grid">
                <% questions.forEach(question => { %>
                    <div class="question-card" id = <%= question.id %>>
                        <div class="card-header">
                            <span class="tag"><%= question.tag %></span>
                            <span class="student-name"><%= question.user.fullName %></span>
                        </div>
                        <div class="card-body">
                            <p class="question-text"><%= question.text %></p>
                        </div>
                        <div class="card-footer">
                            <form class="claim-form" method="POST" action="/courses/<%= course.id %>/questions/<%= question.id %>?_method=PUT">
                                <button class="claim-button" type="submit" value="claimed" name="status">Claim</button>
                            </form>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <p class="noQuestions">There are no questions to display.</p>
        <% } %>
    </div>
</main> 
<script>
  const socket = new WebSocket('ws://localhost:3000');

  socket.onopen = () => {
      console.log('Connected to WebSocket server');
  };

  socket.onmessage = (event) => {
      question = JSON.parse(event.data);
      if(question.eventType == 'newQuestion'){
        addQuestionToDom(question);
      }
      if(question.eventType == 'updateQuestion' && question.status == 'unresolved'){
        addQuestionToDom(question);
      }
      if(question.eventType == 'updateQuestion' && question.status == 'claimed'){
        removeQuestionFromDom(question);
      }
  };

  // Handle WebSocket errors
  socket.onerror = (error) => {
      console.error('WebSocket error:', error);
  };

  // Handle connection closure
  socket.onclose = () => {
      console.log('WebSocket connection closed');
  };

  function addQuestionToDom(question){
    console.log('reached function');
    const noQuestions = document.getElementsByClassName('noQuestions')[1];
    let questionGrid;
    if(noQuestions){
      noQuestions.remove();
      questionGrid = document.createElement('div');
      questionGrid.classList.add('question-grid');
      const queueContainer = document.getElementsByClassName('queue-container')[0];
      queueContainer.appendChild(questionGrid);
    }else{
      questionGrid = document.getElementsByClassName('question-grid')[0];
    }
    
    const questionContainer = document.createElement('div')
    questionContainer.classList.add('question-card');
    questionContainer.id = question.id;

    const cardHeader = document.createElement('div');
    cardHeader.classList.add('card-header');
    const tag = document.createElement('span');
    tag.classList.add('tag');
    tag.textContent = question.tag;
    const studentName = document.createElement('span');
    studentName.classList.add('student-name');
    studentName.textContent = question.fullName;
    cardHeader.appendChild(tag);
    cardHeader.appendChild(studentName);

    const cardBody = document.createElement('div');
    cardBody.classList.add('card-body');
    const text = document.createElement('p');
    text.classList.add('question-text');
    text.textContent = question.text;
    cardBody.appendChild(text);

    const cardFooter = document.createElement('div');
    cardFooter.classList.add('card-footer');
    const submitForm = document.createElement('form');
    submitForm.classList.add('claim-form');
    submitForm.method = "POST";
    submitForm.action = "/courses/" + question.courseId + "/questions" + question.id + "?_method=PUT"
    const btn = document.createElement('button');
    btn.classList.add('claim-button');
    btn.type = "submit";
    btn.value = "claimed";
    btn.name = "status";
    btn.textContent = "Claim";
    submitForm.appendChild(btn);
    cardFooter.appendChild(submitForm);

    questionContainer.appendChild(cardHeader);
    questionContainer.appendChild(cardBody);
    questionContainer.appendChild(cardFooter);
    questionGrid.appendChild(questionContainer);

    console.log('addition complete');
  }

  function removeQuestionFromDom(question){
    const questionContainer = document.getElementById(question.id);
    questionContainer.remove();

    const questionGrid = document.getElementsByClassName('question-grid')[0];
    const questionContainers = document.getElementsByClassName('question-card');
    if(questionContainers.length == 0){
      const p = document.createElement('p')
      p.classList.add('noQuestions');
      p.textContent = "There are no questions to display."
      queueContainer = document.getElementsByClassName('queue-container')[0];
      questionGrid.remove();
      queueContainer.appendChild(p);
    }
  }

</script>
<%- include('../partials/footer.ejs')%>